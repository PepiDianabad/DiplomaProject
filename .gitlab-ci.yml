stages:
  - validate
  - plan
  #- build
  #- apply
  # - destroy

image:
  name: hashicorp/terraform:light
  entrypoint:
    - "/usr/bin/env"
    - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

before_script:
  - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  - rm -rf .terraform
  - terraform --version

validate:
  stage: validate
  script:
    - cd DiplomnaRabota/terraform
    - terraform init
    - terraform validate
  tags:
    - ci-shared

plan:
  stage: plan
  script:
    - cd DiplomnaRabota/terraform
    - terraform init
    - terraform plan
  dependencies:
    - validate
  tags:
    - ci-shared


# build:
#   stage: build
#   image:
#     name: docker:19.03.12
#     entrypoint: [""]
#   services:
#     - docker:19.03.12-dind
#   script:
#     - echo "Building and pushing Docker images to ECR..."
#     - aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 722377226063.dkr.ecr.eu-central-1.amazonaws.com
#     - cd sagemaker/train_model
#     - docker build -t 722377226063.dkr.ecr.eu-central-1.amazonaws.com/arima-model-repo .
#     - docker push 722377226063.dkr.ecr.eu-central-1.amazonaws.com/arima-model-repo:latest
#   tags:
#     - ci-shared

# apply:
#   stage: apply
#   script:
#     - cd DiplomnaRabota/terraform
#     - terraform init
#     - terraform apply -auto-approve
#   dependencies:
#     - plan
#   tags:
#     - ci-shared



# destroy:
#   stage: destroy
#   script:
#     - cd DiplomnaRabota/terraform
#     - terraform destroy -auto-approve
#   when: manual
#   tags:
#     - ci-shared
